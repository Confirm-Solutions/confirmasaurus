name: Test

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    paths-ignore:
      - "anarchy/**"
      - "**.ipynb"
      - "**.md"
  push:
    branches:
      - main
    paths-ignore:
      - "anarchy/**"
      - "**.ipynb"
      - "**.md"
jobs:
  test:
    if: github.event.pull_request.draft == false
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]
        python-version: ["3.10"]
    name: Test (${{ matrix.python-version }}, ${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}
    steps:

      - uses: actions/checkout@v2

      # The conda setup follows the directions given here on how to cache
      # environments.
      # https://github.com/conda-incubator/setup-miniconda#caching-environments
      - name: Setup Mambaforge
        uses: conda-incubator/setup-miniconda@v2
        with:
          miniforge-variant: Mambaforge
          miniforge-version: latest
          auto-update-conda: true
          activate-environment: anaconda-client-env
          use-mamba: true
          python-version: ${{ matrix.python-version }}

      # Cache pre-commit files so it's fast!
      # based on https://pre-commit.com/#github-actions-example 
      - name: set PY
        run: echo "PY=$(python -VV | sha256sum | cut -d' ' -f1)" >> $GITHUB_ENV
      - name: Cache pre-commit
        uses: actions/cache@v2
        with:
          path: ~/.cache/pre-commit
          key: pre-commit|${{ env.PY }}|${{ hashFiles('.pre-commit-config.yaml') }}
        id: precommitcache

      # We separately cache the environment because it's more volatile and we
      # don't want to invalidate the pre-commit cache everytime the environment
      # changes.
      # NOTE: compared to the directions here, we do not include the date in
      # the cache key because we are locking packages via poetry.lock. So,
      # day-to-day updates will not affect us.
      # https://github.com/conda-incubator/setup-miniconda#caching-environments
      - name: Cache Packages
        uses: actions/cache@v2
        with:
          path: ${{ env.CONDA }}/envs
          key: conda-${{ runner.os }}--${{ runner.arch }}-${{ hashFiles('environment.yml', 'poetry.lock') }}-${{ env.CACHE_NUMBER }}
        env:
          # Increase this value to reset cache if environment.yml and poetry.lock have not changed.
          CACHE_NUMBER: 1
        id: packagecache

      - name: Update environment
        run: |
          mamba env update -n anaconda-client-env -f environment.yml
          poetry install
        if: steps.packagecache.outputs.cache-hit != 'true'

      - name: Run all pre-commit checks on the full repo!
        run: |
          pre-commit run --all-files

      - name: Pytest
        run: |
          pytest ./tests
      # TODO: this doesn't currently work because only the imprint repo has the SLACK_BOT_TOKEN
      # - name: Report failures on Slack
      #   if: failure() && github.event.repository.default_branch == github.event.workflow_run.head_branch
      #   id: slack
      #   uses: slackapi/slack-github-action@v1.19.0
      #   with:
      #     # Slack channel id, channel name, or user id to post message.
      #     # See also: https://api.slack.com/methods/chat.postMessage#channels
      #     channel-id: C02TC2DAN74
      #     # For posting a simple plain text message
      #     slack-message: "*Build failure on default branch!* ðŸ˜±\nhttps://github.com/${{github.repository}}/actions/runs/${{github.run_id}}"
      #   env:
      #     SLACK_BOT_TOKEN: ${{ secrets.SLACK_BOT_TOKEN }}
